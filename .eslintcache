[{"/home/pranjl/Desktop/testing/bicometa/src/index.js":"1","/home/pranjl/Desktop/testing/bicometa/src/App.js":"2","/home/pranjl/Desktop/testing/bicometa/src/reportWebVitals.js":"3","/home/pranjl/Desktop/testing/bicometa/src/abi.js":"4"},{"size":535,"mtime":1656340642101,"results":"5","hashOfConfig":"6"},{"size":2256,"mtime":1656498239874,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1656340642101,"results":"8","hashOfConfig":"6"},{"size":4314,"mtime":1656427202784,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15s26t2",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"/home/pranjl/Desktop/testing/bicometa/src/index.js",[],["20","21"],"/home/pranjl/Desktop/testing/bicometa/src/App.js",["22","23","24","25","26"],"import logo from './logo.svg';\nimport './App.css';\nimport { ethers } from 'ethers';\nimport Web3 from 'web3';\nimport { useEffect, useState } from 'react';\nimport {Biconomy} from \"@biconomy/mexa\";\nimport abi from './abi';\nfunction App() {\n  const {ethereum}=window;\n  const [add,setadd]=useState();\n  const [c,setc]=useState(\"false\");\n  \n  useEffect(()=>{\n    const biconomy = new Biconomy(window.ethereum,\n      {walletProvider:window.ethereum, apiKey:\"UEf9ChbPv.a4a6d9bb-35b6-4300-9ade-d42ff09d2db4\", debug: true});\n    //let ethersProvider = new ethers.providers.Web3Provider(biconomy);\n    let web3 = new Web3(biconomy);\n    biconomy.onEvent(biconomy.READY, () => {\n      //console.log(\"biconomy connected\");\n      ethereum.request({ method: \"eth_requestAccounts\" }).then((e) => {\n        setadd(e[0]);\n        if(c==\"true\"){\n        u();\n        setc(\"false\");\n        }\n      //  console.log(e[0])\n        //Session.set(\"add\", e[0]);\n      });\n      // Initialize your dapp here like getting user accounts etc\n    }).onEvent(biconomy.ERROR, (error, message) => {\n     // console.log(\"biconomy error\");\n      // Handle error while initializing mexa\n    });\n    async function u(){  \n      console.log(\"u ke andar\");\n      let contract = new web3.eth.Contract(\n        abi,\n       \"0x9b6afcddaf200bf4bc4d9df1213a6a11da8a1731\"\n      );\n    let userAddress = add;\n   //all strings params must change as our smartcontract do not allow key duplication\n  let tx = contract.methods.createid(\"string1\",\"string2\",\"string3\",\"nishu\").send({\n    from: add\n    //signatureType: biconomy.PERSONAL_SIGN\n    //by default mexa will consider personal sign hence signatureType is optional \n    //and can be omitted in case of personal sign\n});\n\ntx.on(\"transactionHash\", function (hash) {\n    console.log(`Transaction hash is ${hash}`);\n    //showInfoMessage(`Transaction sent. Waiting for confirmation ..`);\n}).once(\"confirmation\", function (confirmationNumber, receipt) {\n    console.log(receipt);\n    console.log(receipt.transactionHash);\n    //do something with transaction hash\n});\n    }\n  \n  },[c]\n);\n  return (\n    <div className=\"App\">\n    \n        <button onClick={()=>{\n       setc(\"true\");\n        }}>See meta</button>\n        </div>\n  );\n}\n\nexport default App;\n","/home/pranjl/Desktop/testing/bicometa/src/reportWebVitals.js",[],"/home/pranjl/Desktop/testing/bicometa/src/abi.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":3,"column":10,"nodeType":"33","messageId":"34","endLine":3,"endColumn":16},{"ruleId":"36","severity":1,"message":"37","line":22,"column":13,"nodeType":"38","messageId":"39","endLine":22,"endColumn":15},{"ruleId":"31","severity":1,"message":"40","line":40,"column":9,"nodeType":"33","messageId":"34","endLine":40,"endColumn":20},{"ruleId":"41","severity":1,"message":"42","line":59,"column":5,"nodeType":"43","endLine":59,"endColumn":8,"suggestions":"44"},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'ethers' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userAddress' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'add' and 'ethereum'. Either include them or remove the dependency array.","ArrayExpression",["47"],"no-global-assign","no-unsafe-negation",{"desc":"48","fix":"49"},"Update the dependencies array to be: [add, c, ethereum]",{"range":"50","text":"51"},[2083,2086],"[add, c, ethereum]"]